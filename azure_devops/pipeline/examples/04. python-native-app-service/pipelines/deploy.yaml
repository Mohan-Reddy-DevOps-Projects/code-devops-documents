parameters:
- name: ado_environment
- name: deploy_variable_group
- name: stage_name
- name: az_subscription_sc
- name: blue_green
  default: 'False'
- name: depends_on
  type: object
  default: ['ci']
- name: condition
  default: succeeded()

stages:
- stage: ${{ parameters.stage_name }}
  dependsOn: ${{ parameters.depends_on }}
  condition: ${{ parameters.condition }}

  variables:
  - group: "${{ parameters.deploy_variable_group }}"
  
  jobs:
  - deployment: deploy
    environment: "${{ parameters.ado_environment }}"

    variables:
      ${{ if in(parameters.blue_green, 'False', 'false') }}:
        APP_SERVICE_SLOT: 'production'
      ${{ if in(parameters.blue_green, 'True', 'true') }}:
        APP_SERVICE_SLOT: 'staging'

    strategy:
      runOnce:
        deploy:
          steps:

          # Stopping the app service before upgrading
          - task: AzureAppServiceManage@0
            displayName: Stop the App Service
            inputs:
              azureSubscription:  ${{ parameters.az_subscription_sc }} 
              ResourceGroupName: $(var_az_app_service_rg)
              WebAppName: $(var_az_app_service)
              Action: 'Stop Azure App Service'
              SpecifySlotOrASE: true
              Slot: '$(APP_SERVICE_SLOT)'

          # We need to update the app settings prior to deployment as azure app service behaves wierd while upgrading python version. 
          - task: AzureAppServiceSettings@1
            displayName: Update App Settings
            inputs:
              azureSubscription: ${{ parameters.az_subscription_sc }}
              appName: $(var_az_app_service)
              resourceGroupName: $(var_az_app_service_rg)
              slotName: '$(APP_SERVICE_SLOT)'
              appSettings: |
                [
                  {
                    "name": "HAL_ACTIVE_PROFILE",
                    "value": "$(var_spring_profiles_active)"
                  },
                  {
                    "name": "PORT",
                    "value": "8008"
                  },
                  {
                    "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
                    "value": "true"
                  }
                ]
              # This is mandatory to set the Azure App Service Stack.
              generalSettings: |
                [
                  {
                    "linuxFxVersion": "PYTHON|3.11"
                  }
                ]

          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: ${{ parameters.az_subscription_sc }}
              ResourceGroupName: $(var_az_app_service_rg)
              WebAppName: $(var_az_app_service)
              appType: 'webAppLinux'
              deployToSlotOrASE: true
              SlotName: '$(APP_SERVICE_SLOT)'
              packageForLinux: '$(Pipeline.Workspace)/**/*.zip'
              # Optional if your startUpCommand is different
              StartupCommand: 'gunicorn main:app -w 4 -k uvicorn.workers.UvicornWorker -b 0.0.0.0:8008'
              RuntimeStack: 'PYTHON|3.11'

          # Starting the app service before upgrading
          - task: AzureAppServiceManage@0
            displayName: Start the App Service
            inputs:
              azureSubscription:  ${{ parameters.az_subscription_sc }} 
              ResourceGroupName: $(var_az_app_service_rg)
              WebAppName: $(var_az_app_service)
              Action: 'Start Azure App Service' 
              SpecifySlotOrASE: true
              Slot: '$(APP_SERVICE_SLOT)'

          # if blue_green is false, then app directly deploy to "production" slot
          # hence we are stopping staging slot for saving resources.
          - ${{ if in(parameters.blue_green, 'False', 'false') }}:
            - task: AzureAppServiceManage@0
              displayName: Stop the Standby Slot
              inputs:
                azureSubscription:  ${{ parameters.az_subscription_sc }} 
                ResourceGroupName: $(var_az_app_service_rg)
                WebAppName: $(var_az_app_service)
                Action: 'Stop Azure App Service' 
                SpecifySlotOrASE: true
                Slot: 'staging'


# in blue green model, first app is deploy to "staging" slot.  
# If all looks good, do a LB switch to "production" slot
- ${{ if in(parameters.blue_green, 'True', 'true') }}:
  - stage: ${{ parameters.stage_name }}_GREEN_LIVE
    
    variables:
      - group: "${{ parameters.deploy_variable_group }}"

    condition: ${{ parameters.condition }}
    dependsOn: ${{ parameters.stage_name }}
    jobs:
    - deployment: switch_slots
      environment: "${{ parameters.ado_environment }}"
      strategy:
        runOnce:
          deploy:
            steps:
            - download: none 
            
            # Only active slots can be swapped. Hence starting the standyby slot if not started already
            - task: AzureAppServiceManage@0
              displayName: Start the Standby Slot
              inputs:
                azureSubscription:  ${{ parameters.az_subscription_sc }} 
                ResourceGroupName: $(var_az_app_service_rg)
                WebAppName: $(var_az_app_service)
                Action: 'Start Azure App Service' 
                SpecifySlotOrASE: true
                Slot: 'staging'

            - task: AzureAppServiceManage@0
              inputs:
                azureSubscription: ${{ parameters.az_subscription_sc }}
                ResourceGroupName: $(var_az_app_service_rg)
                WebAppName: $(var_az_app_service)
                Action: 'Swap Slots'
                SourceSlot: 'staging'
                PreserveVnet: true
                SwapWithProduction: true

            # Stopping the standby slot for saving resources. 
            - task: AzureAppServiceManage@0
              displayName: Stop the Standby Slot
              inputs:
                azureSubscription:  ${{ parameters.az_subscription_sc }} 
                ResourceGroupName: $(var_az_app_service_rg)
                WebAppName: $(var_az_app_service)
                Action: 'Stop Azure App Service' 
                SpecifySlotOrASE: true
                Slot: 'staging'
              