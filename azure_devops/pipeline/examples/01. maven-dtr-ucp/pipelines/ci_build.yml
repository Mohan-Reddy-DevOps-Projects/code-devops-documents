stages:
- stage: ci
  displayName: CI Build and Scan 
  jobs:
  - job: build
    variables:
    - group: docker-prod-creds # create this variable group in ADO and create two variables DOCKER_USERNAME & DOCKER_PASSWORD
    displayName: Build 
    steps:
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'clean install docker:push' # provide goals which do docker push
        javaHomeOption: 'path'
        jdkDirectory: $(SYSTEM_JDK_17)
        mavenVersionOption: 'path'
        mavenPath: $(SYSTEM_MAVEN_3)
        options: '-Ddtr.username=$(DOCKER_USERNAME) -Ddtr.password=$(DOCKER_PASSWORD)'

    - publish: docker-compose.yml
      artifact: pipeline_artifact
      displayName: Publish Artifacts Docker Compose File

  - job: set_properties
    displayName: Set Properties
    steps:
    - bash: | 
        groupId=$($MAVEN help:evaluate -Dexpression="project.groupId" -q -DforceStdout)
        artifactId=$($MAVEN help:evaluate -Dexpression="project.artifactId" -q -DforceStdout)
        version=$($MAVEN help:evaluate -Dexpression="project.version" -q -DforceStdout)

        echo "##vso[task.setvariable variable=PROJECT_VERSION;isOutput=true]$version"
        echo "##vso[task.setvariable variable=PROJECT_ARTIFACTID;isOutput=true]$artifactId"
        echo "##vso[task.setvariable variable=PROJECT_GROUPID;isOutput=true]$groupId"
      name: project_properties
      displayName: Set Project Properties
      env:
        MAVEN: $(SYSTEM_MAVEN_3)

    - bash: |
        echo "Project Version: $(PROJECT_VERSION)"
        echo "Project Artifact ID: $(PROJECT_ARTIFACTID)"
        echo "Project Group ID: $(PROJECT_GROUPID)"
      displayName: Display Project Properties
      
  # blackduck scan & checkmarx_scan needs Project Version. 
  # Hence these jobs depends on set_properties job
  - job: blackduck_scan
    displayName: Blackduck Scan
    dependsOn: set_properties 
    variables:
      - group: 'SDLC Credentials' 
    steps:
    - template: blackduck-scan.yml@sdlc_templates
      parameters:
        BLACKDUCK_API_TOKEN: $(BLACKDUCK_API_TOKEN)
        DISTRIBUTION: "INTERNAL" 
        PROJECT_NAME: "sandbox-maven-dtr-ucp" 
        PROJECT_VERSION: $[ dependencies.set_properties.outputs['project_properties.PROJECT_VERSION'] ]
        TEAM: "sandbox"
  
  - job: checkmarx_scan
    displayName: Checkmarx Scan
    dependsOn: set_properties
    variables:
      - group: 'SDLC Credentials'
    steps:
    - template: checkmarx-scan.yml@sdlc_templates
      parameters:
        CHECKMARX_PASSWORD: $(CHECKMARX_PASSWORD)
        PROJECT_NAME: "sandbox-maven-dtr-ucp"
        PROJECT_VERSION: $[ dependencies.set_properties.outputs['project_properties.PROJECT_VERSION'] ]
        TEAM: "sandbox"
        CHECKMARX_ARGUMENTS: -LocationPathExclude "grails-app/assets/javascripts,src/test,src/integration-test,grails-app/taglib/twitter/bootstrap" -LocationFilesExclude "**/grails-wrapper.jar"  
